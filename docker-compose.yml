services:
  web:
    container_name: "web"
    image: nginx:alpine
    depends_on:
      - api
    ports:
      - "8082:80"
    volumes:
      - ./config:/etc/nginx/conf.d
    networks:
      - custom

  api:
    profiles: [ "api" ]
    container_name: service.api
    build:
      context: .
    restart: unless-stopped
    expose:
      - "5000"
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - service.postgres.network
      - custom
    volumes:
      - ./config:/app/config:ro
    environment:
      - CONFIG_PATH=${CONFIG_PATH:-./config/prod_config.toml}
    command: ["python", "-Om", "src"]
    healthcheck:
      test: ["CMD-SHELL", "curl -fsSL http://localhost:5000/healthcheck/"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s

  postgres_migration:
    profiles: [ "migration" ]
    container_name: service.postgres_migration
    build:
      context: .
    restart: no
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - service.postgres.network
    volumes:
      - ./config:/app/config:ro
      - ./alembic.ini:/app/alembic.ini:ro
      - ./src/infrastructure/db/migrations:/app/src/infrastructure/db/migrations:ro
    environment:
      - CONFIG_PATH=${CONFIG_PATH:-./config/prod_config.toml}
    command: ["python", "-m", "alembic", "upgrade", "head"]

  postgres:
    profiles: [ "api", "migration" ]
    container_name: service.postgres
    image: "postgres:15-alpine"
    hostname: service.postgres
    restart: unless-stopped
    expose:
      - "5432"
    ports:
      - "127.0.0.1:15432:5432"
    networks:
      - service.postgres.network
    environment:
      POSTGRES_PASSWORD: a5W-ZKX-tSfa1I11j0VM
      POSTGRES_USER: 2A_user
      POSTGRES_DB: 2A_database
    volumes:
      - service.postgres.data:/var/lib/postgresql/users:rw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s

volumes:
  service.postgres.data: {}

networks:
  service.postgres.network: {}
  custom:
    driver: bridge
